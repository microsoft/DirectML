name: $(Date:yyMMdd-HHmm)$(Rev:.r).$(SourceBranchName)

pr: 
  branches:
    include: 
    - main
  paths:
    include: 
    - DxDispatch

trigger: none

stages:
- stage: buildStage
  displayName: Build
  jobs:
  - job: build
    displayName: Build
    strategy:
      matrix:
        win_x64_release:
          poolName: DirectML_BuildPool
          configurePreset: win-x64
          buildPreset: win-x64-release
        win_x86_release:
          poolName: DirectML_BuildPool
          configurePreset: win-x86
          buildPreset: win-x86-release
        win_arm64_release:
          poolName: DirectML_BuildPool
          configurePreset: win-arm64
          buildPreset: win-arm64-release
        # linux-x64-release: TODO
    pool: $(poolName)
    steps:
    - task: PowerShell@2
      name: findCMake
      displayName: Find CMake
      inputs:
        targetType: inline
        script: |
          curl.exe -L -o vswhere.exe https://github.com/microsoft/vswhere/releases/download/3.0.3/vswhere.exe

          # Find VS 2022
          $VsPath = .\vswhere.exe -version '[17.0,18.0)' -property installationPath
          if (!$VsPath)
          {
              throw "Did not find VS 2022 installation."
          }

          # Find cmake.exe within VS 2022 installation.
          $CMakePath = Join-Path $VsPath 'Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe'
          if (!(Test-Path $CMakePath))
          {
              throw "Did not find cmake.exe in VS installation."
          }

          Write-Host "##vso[task.setVariable variable=path;isOutput=true]$CMakePath"

    - powershell: |
        $(findCmake.path) --preset $(configurePreset)
      displayName: Configure

    - powershell: |
        $(findCmake.path) --build --preset $(buildPreset)
      displayName: Build